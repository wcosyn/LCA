%!PS-Adobe-2.0 EPSF-2.0
%%Title: a2results.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Mon Apr 22 15:30:19 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -96 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (a2results.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (maarten)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 22 15:30:19 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 290 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
4.000 UL
LTb
1073 981 M
126 0 V
5478 0 R
-126 0 V
stroke
899 981 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 1)]
] -96.7 MRshow
4.000 UL
LTb
1073 1511 M
126 0 V
5478 0 R
-126 0 V
stroke
899 1511 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 2)]
] -96.7 MRshow
4.000 UL
LTb
1073 2041 M
126 0 V
5478 0 R
-126 0 V
stroke
899 2041 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 3)]
] -96.7 MRshow
4.000 UL
LTb
1073 2571 M
126 0 V
5478 0 R
-126 0 V
stroke
899 2571 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 4)]
] -96.7 MRshow
4.000 UL
LTb
1073 3101 M
126 0 V
5478 0 R
-126 0 V
stroke
899 3101 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 5)]
] -96.7 MRshow
4.000 UL
LTb
1073 3631 M
126 0 V
5478 0 R
-126 0 V
stroke
899 3631 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 6)]
] -96.7 MRshow
4.000 UL
LTb
1073 4161 M
126 0 V
5478 0 R
-126 0 V
stroke
899 4161 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 7)]
] -96.7 MRshow
4.000 UL
LTb
1073 4691 M
126 0 V
5478 0 R
-126 0 V
stroke
899 4691 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 8)]
] -96.7 MRshow
4.000 UL
LTb
1073 928 M
0 126 V
0 3637 R
0 -126 V
stroke
1073 638 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 1)]
] -96.7 MCshow
4.000 UL
LTb
1777 928 M
0 63 V
0 3700 R
0 -63 V
2188 928 M
0 63 V
0 3700 R
0 -63 V
2480 928 M
0 63 V
0 3700 R
0 -63 V
2706 928 M
0 63 V
0 3700 R
0 -63 V
2892 928 M
0 63 V
0 3700 R
0 -63 V
3048 928 M
0 63 V
0 3700 R
0 -63 V
3184 928 M
0 63 V
0 3700 R
0 -63 V
3303 928 M
0 63 V
0 3700 R
0 -63 V
3410 928 M
0 126 V
0 3637 R
0 -126 V
stroke
3410 638 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 10)]
] -96.7 MCshow
4.000 UL
LTb
4114 928 M
0 63 V
0 3700 R
0 -63 V
4525 928 M
0 63 V
0 3700 R
0 -63 V
4817 928 M
0 63 V
0 3700 R
0 -63 V
5044 928 M
0 63 V
0 3700 R
0 -63 V
5229 928 M
0 63 V
0 3700 R
0 -63 V
5385 928 M
0 63 V
0 3700 R
0 -63 V
5521 928 M
0 63 V
0 3700 R
0 -63 V
5640 928 M
0 63 V
0 3700 R
0 -63 V
5747 928 M
0 126 V
0 3637 R
0 -126 V
stroke
5747 638 M
[ [(Helvetica) 290.0 0.0 true true 0 ( 100)]
] -96.7 MCshow
4.000 UL
LTb
6451 928 M
0 63 V
0 3700 R
0 -63 V
stroke
1073 4691 N
0 -3763 V
5604 0 V
0 3763 V
-5604 0 V
Z stroke
LCb setrgbcolor
232 2809 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Italic) 300.0 0.0 true true 0 (a)]
[(Times-Italic) 240.0 -90.0 true true 0 (2)]
[(Times-Italic) 300.0 0.0 true true 0 ( \(A/d\) )]
] -70.0 MCshow
grestore
LTb
LCb setrgbcolor
3875 203 M
[ [(Times-Italic) 300.0 0.0 true true 0 (mass number A)]
] -100.0 MCshow
LTb
1.000 UP
4.000 UL
LTb
% Begin plot #1
4.000 UL
LT0
0.60 0.60 0.60 C LCb setrgbcolor
5396 3021 M
[ [(Helvetica) 290.0 0.0 true true 0 (with c.o.m)]
] -96.7 MRshow
LT0
0.60 0.60 0.60 C 0.400 5570 2949 759 145 BoxColFill
gsave 2188 1196 N 0 235 V 291 492 V 0 -354 V 0.40 PolyFill
gsave 2480 1569 N 0 354 V 822 352 V 0 -445 V 0.40 PolyFill
gsave 3303 1830 N 0 445 V 291 351 V 0 -535 V 0.40 PolyFill
gsave 3595 2091 N 0 535 V 291 439 V 0 -650 V 0.40 PolyFill
gsave 3887 2415 N 0 650 V 530 329 V 0 -753 V 0.40 PolyFill
gsave 4418 2641 N 0 753 V 398 612 V 0 -939 V 0.40 PolyFill
gsave 4817 3067 N 0 939 V 184 33 V 0 -966 V 0.40 PolyFill
gsave 5002 3073 N 0 966 V 156 205 V 0 -1040 V 0.40 PolyFill
gsave 5159 3204 N 0 1040 V 118 47 V 0 -919 V 0.40 PolyFill
gsave 5278 3372 N 0 919 V 414 400 V 132 0 V 0 -938 V 0.40 PolyFill
gsave 5825 3753 N 0 938 V 609 0 V 0 -576 V 0.40 PolyFill
% End plot #1
% Begin plot #2
2.000 UP
4.000 UL
LT0
0.60 0.60 0.60 C LCb setrgbcolor
5396 2731 M
[ [(Helvetica) 290.0 0.0 true true 0 (without c.o.m.)]
] -96.7 MRshow
LT0
0.60 0.60 0.60 C 2188 981 DiaF
2480 1246 DiaF
3303 1430 DiaF
3595 1614 DiaF
3887 1842 DiaF
4418 1997 DiaF
4817 2289 DiaF
5002 2289 DiaF
5159 2376 DiaF
5278 2439 DiaF
5825 2703 DiaF
6435 2959 DiaF
5949 2731 DiaF
% End plot #2
% Begin plot #3
2.000 UP
5.000 UL
LT0
0.89 0.10 0.11 C LCb setrgbcolor
5396 2441 M
[ [(Helvetica) 290.0 0.0 true true 0 (Fomin et. al.)]
] -96.7 MRshow
LT0
0.89 0.10 0.11 C 5570 2441 M
759 0 V
-759 31 R
0 -62 V
759 62 R
0 -62 V
2188 1410 M
0 64 V
-31 -64 R
62 0 V
-62 64 R
62 0 V
261 869 R
0 74 V
-31 -74 R
62 0 V
-62 74 R
62 0 V
792 186 R
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
261 249 R
0 106 V
-31 -106 R
62 0 V
-62 106 R
62 0 V
1652 138 R
0 127 V
-31 -127 R
62 0 V
-62 127 R
62 0 V
6435 3170 M
0 170 V
-31 -170 R
62 0 V
-62 170 R
62 0 V
2188 1442 Crs
2480 2380 Crs
3303 2651 Crs
3595 3000 Crs
5278 3255 Crs
6435 3255 Crs
5949 2441 Crs
% End plot #3
% Begin plot #4
2.000 UP
5.000 UL
LT0
0.22 0.49 0.72 C LCb setrgbcolor
5396 2151 M
[ [(Helvetica) 290.0 0.0 true true 0 (Egiyan et. al.)]
] -96.7 MRshow
LT0
0.22 0.49 0.72 C 5570 2151 M
759 0 V
-759 31 R
0 -62 V
759 62 R
0 -62 V
2188 1442 M
0 106 V
-31 -106 R
62 0 V
-62 106 R
62 0 V
261 737 R
0 360 V
-31 -360 R
62 0 V
-62 360 R
62 0 V
1084 106 R
0 435 V
-31 -435 R
62 0 V
-62 435 R
62 0 V
1533 -16 R
0 477 V
-31 -477 R
62 0 V
-62 477 R
62 0 V
2188 1495 Star
2480 2465 Star
3595 2969 Star
5159 3408 Star
5949 2151 Star
% End plot #4
% Begin plot #5
2.000 UP
4.000 UL
LT0
0.30 0.69 0.29 C LCb setrgbcolor
5396 1861 M
[ [(Helvetica) 290.0 0.0 true true 0 (SLAC)]
] -96.7 MRshow
LT0
0.30 0.69 0.29 C 5570 1861 M
759 0 V
-759 31 R
0 -62 V
759 62 R
0 -62 V
2480 1935 M
0 530 V
-31 -530 R
62 0 V
-62 530 R
62 0 V
1084 371 R
0 530 V
-31 -530 R
62 0 V
-62 530 R
62 0 V
792 -424 R
0 636 V
-31 -636 R
62 0 V
-62 636 R
62 0 V
710 -848 R
0 954 V
-31 -954 R
62 0 V
-62 954 R
62 0 V
6435 2624 M
0 742 V
-31 -742 R
62 0 V
-62 742 R
62 0 V
2480 2200 Box
3595 3101 Box
4418 3260 Box
5159 3207 Box
6435 2995 Box
5949 1861 Box
% End plot #5
% Begin plot #6
2.000 UP
4.000 UL
LT0
0.60 0.31 0.64 C LCb setrgbcolor
5396 1571 M
[ [(Helvetica) 290.0 0.0 true true 0 (JLAB \(Hall B\))]
] -96.7 MRshow
LT0
0.60 0.31 0.64 C 5570 1571 M
759 0 V
-759 31 R
0 -62 V
759 62 R
0 -62 V
2480 2285 M
0 360 V
-31 -360 R
62 0 V
-62 360 R
62 0 V
1084 106 R
0 435 V
-31 -435 R
62 0 V
-62 435 R
62 0 V
1533 -16 R
0 477 V
-31 -477 R
62 0 V
-62 477 R
62 0 V
2480 2465 BoxF
3595 2969 BoxF
5159 3408 BoxF
5949 1571 BoxF
% End plot #6
% Begin plot #7
2.000 UP
4.000 UL
LT0
1.00 0.50 0.00 C LCb setrgbcolor
5396 1281 M
[ [(Helvetica) 290.0 0.0 true true 0 (JLAB \(Hall C\))]
] -96.7 MRshow
LT0
1.00 0.50 0.00 C 5570 1281 M
759 0 V
-759 31 R
0 -62 V
759 62 R
0 -62 V
2480 2306 M
0 106 V
-31 -106 R
62 0 V
-62 106 R
62 0 V
792 48 R
0 127 V
-31 -127 R
62 0 V
-62 127 R
62 0 V
261 297 R
0 169 V
-31 -169 R
62 0 V
-62 169 R
62 0 V
1652 53 R
0 212 V
-31 -212 R
62 0 V
-62 212 R
62 0 V
6435 3069 M
0 233 V
-31 -233 R
62 0 V
-62 233 R
62 0 V
2480 2359 Circle
3303 2523 Circle
3595 2969 Circle
5278 3212 Circle
6435 3186 Circle
5949 1281 Circle
% End plot #7
4.000 UL
LTb
1073 4691 N
0 -3763 V
5604 0 V
0 3763 V
-5604 0 V
Z stroke
1.000 UP
4.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Italic Helvetica
